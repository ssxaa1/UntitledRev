
local BonnieKeybinds = Instance.new("Folder",workspace)
BonnieKeybinds.Name = "local Keybinds"
wait(0.5)
game.workspace["local Keybinds"].Archivable = false
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Bennett Scripts | The Vampire Mythology", "GrapeTheme")
local Bennett = Window:NewTab("Powers")
local BennettSection = Bennett:NewSection("Local Keybinds")
BennettSection:NewTextBox("Kill someone (hold vortex orb)", "", function(txt)
    local Players = game:GetService("Players")
    local msg = txt
    local function findPlayer(stringg)
        for _, v in pairs(Players:GetPlayers()) do
            if stringg:lower() == (v.Name:lower()):sub(1, #stringg) then
                return v
            end
        end
    end

    local player = findPlayer(msg)
    local CHAR = player.Character
    
-- Script generated by Bennett Spy - discord: bennettscripts
bennettscripts = {
    [1] = "Vortex",
    [2] = player.Character,
    [3] = CFrame.new(Vector3.new(), Vector3.new())
}

game:GetService("ReplicatedStorage").Events.darkobjects:FireServer(unpack(bennettscripts))
      
end)
BennettSection:NewToggle("Keybinds On/Off", "", function(state)
    if state == true then
        game.workspace["local Keybinds"].Archivable = true
    else
        game.workspace["local Keybinds"].Archivable = false
    end
end)

BennettSection:NewKeybind("Kill someone (hold vortex orb)", "",Enum.KeyCode.One, function()
    if game.workspace["local Keybinds"].Archivable == true then
    local function getPlayer()
            local userInput = game:GetService("UserInputService")
            local cam = workspace.CurrentCamera
            local mousePos = userInput:GetMouseLocation()
            local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
            players = {}
            for _, x in next, game:GetService('Players'):GetPlayers() do
                players[#players + 1] = x.Character
            end
            local raycastParams = RaycastParams.new()
            raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
            raycastParams.FilterDescendantsInstances = players
            raycastParams.IgnoreWater = true
            local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
            if raycastResult then
                for _, x in next, game:GetService('Players'):GetPlayers() do
                    if not raycastResult.Instance:IsDescendantOf(x.Character) then
                        continue 
                    end
                    return x
                end
            end
            return false
        end
        local function Set(list)
            local set = {}
            for _, l in ipairs(list) do
                if l then
                    set[l] = true
                end
            end
            return set
        end
        if IsTyping then return end
        local player = getPlayer()
        if player then
            local pos = player.Character.HumanoidRootPart.CFrame

-- Script generated by Bennett Spy - discord: bennettscripts
bennettscripts = {
    [1] = "Vortex",
    [2] = player.Character,
    [3] = CFrame.new(Vector3.new(), Vector3.new())
}

game:GetService("ReplicatedStorage").Events.darkobjects:FireServer(unpack(bennettscripts))
															
        end
    end
end)

local Bennett = Window:NewTab("Characters")
local BennettSection = Bennett:NewSection("Not In Game")

BennettSection:NewDropdown("Jean Grey", "", {"Outfit1", "Outfit2", "Outfit3", "Outfit4", "Outfit5"}, function(currentOption)
                           local selectedOutfit;
                           selectedOutfit = currentOption;
                           if selectedOutfit then

local args = {
    [1] = "Jean Grey",
    [2] = selectedOutfit,
    [3] = "Jean Grey",
    [4] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CharacterChange"):FireServer(unpack(args))





                           end
local oldList = {
  "Outfit1",
  "Outfit2",
  "Outfit3",
  "Outfit4",
  "Outfit5"
}
local newList = {
  "Jean Grey"
}
                           wait(0.5)
                           dropdown:Refresh(newList)
    print(currentOption)
end)

BennettSection:NewDropdown("Kayla", "", {"Outfit1", "Outfit2"}, function(currentOption)
                           local selectedOutfit;
                           selectedOutfit = currentOption;
                           if selectedOutfit then

local args = {
    [1] = "Kayla",
    [2] = selectedOutfit,
    [3] = "Kayla",
    [4] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CharacterChange"):FireServer(unpack(args))





                           end
local oldList = {
  "Outfit1",
  "Outfit2"
}
local newList = {
  "Kayla"
}
                           wait(0.5)
                           dropdown:Refresh(newList)
    print(currentOption)
end)

BennettSection:NewDropdown("Lilith", "", {"Outfit1", "Outfit2", "Outfit3"}, function(currentOption)
                           local selectedOutfit;
                           selectedOutfit = currentOption;
                           if selectedOutfit then

local args = {
    [1] = "Lilith",
    [2] = selectedOutfit,
    [3] = "Lilith",
    [4] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CharacterChange"):FireServer(unpack(args))





                           end
local oldList = {
  "Outfit1",
  "Outfit2",
  "Outfit3"
}
local newList = {
  "Lilith"
}
                           wait(0.5)
                           dropdown:Refresh(newList)
    print(currentOption)
end)

BennettSection:NewDropdown("Madison Montgomery", "", {"Outfit1", "Outfit2", "Outfit3", "Outfit4", "Outfit5"}, function(currentOption)
                           local selectedOutfit;
                           selectedOutfit = currentOption;
                           if selectedOutfit then

local args = {
    [1] = "Madison Montgomery",
    [2] = selectedOutfit,
    [3] = "Madison Montgomery",
    [4] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CharacterChange"):FireServer(unpack(args))





                           end
local oldList = {
  "Outfit1",
  "Outfit2",
  "Outfit3",
  "Outfit4",
  "Outfit5"
}
local newList = {
  "Madison Montgomery"
}
                           wait(0.5)
                           dropdown:Refresh(newList)
    print(currentOption)
end)

BennettSection:NewDropdown("Paige Matthews", "", {"Outfit1", "Outfit2", "Outfit3", "Outfit4", "Outfit5"}, function(currentOption)
                           local selectedOutfit;
                           selectedOutfit = currentOption;
                           if selectedOutfit then

local args = {
    [1] = "Paige Matthews",
    [2] = selectedOutfit,
    [3] = "Paige Matthews",
    [4] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CharacterChange"):FireServer(unpack(args))





                           end
local oldList = {
  "Outfit1",
  "Outfit2",
  "Outfit3",
  "Outfit4",
  "Outfit5"
}
local newList = {
  "Paige Matthews"
}
                           wait(0.5)
                           dropdown:Refresh(newList)
    print(currentOption)
end)

BennettSection:NewDropdown("Phoebe Halliwell", "", {"Outfit1", "Outfit2", "Outfit3", "Outfit4", "Outfit5"}, function(currentOption)
                           local selectedOutfit;
                           selectedOutfit = currentOption;
                           if selectedOutfit then

local args = {
    [1] = "Phoebe Halliwell",
    [2] = selectedOutfit,
    [3] = "Phoebe Halliwell",
    [4] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CharacterChange"):FireServer(unpack(args))





                           end
local oldList = {
  "Outfit1",
  "Outfit2",
  "Outfit3",
  "Outfit4",
  "Outfit5"
}
local newList = {
  "Phoebe Halliwell"
}
                           wait(0.5)
                           dropdown:Refresh(newList)
    print(currentOption)
end)

BennettSection:NewDropdown("Piper Halliwell", "", {"Outfit1", "Outfit2", "Outfit3"}, function(currentOption)
                           local selectedOutfit;
                           selectedOutfit = currentOption;
                           if selectedOutfit then

local args = {
    [1] = "Piper Halliwell",
    [2] = selectedOutfit,
    [3] = "Piper Halliwell",
    [4] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CharacterChange"):FireServer(unpack(args))





                           end
local oldList = {
  "Outfit1",
  "Outfit2",
  "Outfit3"
}
local newList = {
  "Piper Halliwell"
}
                           wait(0.5)
                           dropdown:Refresh(newList)
    print(currentOption)
end)

BennettSection:NewDropdown("Prue Halliwell", "", {"Outfit1", "Outfit2", "Outfit3", "Outfit4"}, function(currentOption)
                           local selectedOutfit;
                           selectedOutfit = currentOption;
                           if selectedOutfit then

local args = {
    [1] = "Prue Halliwell",
    [2] = selectedOutfit,
    [3] = "Prue Halliwell",
    [4] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CharacterChange"):FireServer(unpack(args))





                           end
local oldList = {
  "Outfit1",
  "Outfit2",
  "Outfit3",
  "Outfit4"
}
local newList = {
  "Prue Halliwell"
}
                           wait(0.5)
                           dropdown:Refresh(newList)
    print(currentOption)
end)

BennettSection:NewDropdown("Raven", "", {"Outfit1", "Outfit2"}, function(currentOption)
                           local selectedOutfit;
                           selectedOutfit = currentOption;
                           if selectedOutfit then

local args = {
    [1] = "Raven",
    [2] = selectedOutfit,
    [3] = "Raven",
    [4] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CharacterChange"):FireServer(unpack(args))





                           end
local oldList = {
  "Outfit1",
  "Outfit2"
}
local newList = {
  "Raven"
}
                           wait(0.5)
                           dropdown:Refresh(newList)
    print(currentOption)
end)

BennettSection:NewDropdown("Sabrina Spellman", "", {"Outfit1", "Outfit2", "Outfit3"}, function(currentOption)
                           local selectedOutfit;
                           selectedOutfit = currentOption;
                           if selectedOutfit then

local args = {
    [1] = "Sabrina Spellman",
    [2] = selectedOutfit,
    [3] = "Sabrina Spellman",
    [4] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CharacterChange"):FireServer(unpack(args))





                           end
local oldList = {
  "Outfit1",
  "Outfit2",
  "Outfit3"
}
local newList = {
  "Sabrina Spellman"
}
                           wait(0.5)
                           dropdown:Refresh(newList)
    print(currentOption)
end)

BennettSection:NewDropdown("Inadu Labonair", "", {"Outfit1", "Outfit2", "Outfit3"}, function(currentOption)
                           local selectedOutfit;
                           selectedOutfit = currentOption;
                           if selectedOutfit then

local args = {
    [1] = "The Hollow",
    [2] = selectedOutfit,
    [3] = "The Hollow",
    [4] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CharacterChange"):FireServer(unpack(args))





                           end
local oldList = {
  "Outfit1",
  "Outfit2",
  "Outfit3"
}
local newList = {
  "Inadu Labonair"
}
                           wait(0.5)
                           dropdown:Refresh(newList)
    print(currentOption)
end)

BennettSection:NewButton("Carrie White", " ", function()

local args = {
    [1] = "Carrie White",
    [2] = "Outfit1",
    [3] = "Carrie White",
    [4] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CharacterChange"):FireServer(unpack(args))

end)

BennettSection:NewButton("Alex Russo", " ", function()

local args = {
    [1] = "Alex Russo",
    [2] = "Outfit1",
    [3] = "Alex Russo",
    [4] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CharacterChange"):FireServer(unpack(args))

end)

BennettSection:NewButton("Amara", " ", function()

local args = {
    [1] = "Amara",
    [2] = "Outfit1",
    [3] = "Amara",
    [4] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CharacterChange"):FireServer(unpack(args))

end)

BennettSection:NewButton("Ariane", " ", function()

local args = {
    [1] = "Ariane",
    [2] = "Outfit1",
    [3] = "Ariane",
    [4] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CharacterChange"):FireServer(unpack(args))

end)

BennettSection:NewButton("Emily Bennett", " ", function()

local args = {
    [1] = "Emily Bennett",
    [2] = "Outfit1",
    [3] = "Emily Bennett",
    [4] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CharacterChange"):FireServer(unpack(args))

end)

BennettSection:NewButton("Evil Alex Russo", " ", function()

local args = {
    [1] = "Evil Alex Russo",
    [2] = "Outfit1",
    [3] = "Evil Alex Russo",
    [4] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CharacterChange"):FireServer(unpack(args))

end)

BennettSection:NewButton("Mallory", " ", function()

local args = {
    [1] = "Mallory",
    [2] = "Outfit1",
    [3] = "Mallory",
    [4] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CharacterChange"):FireServer(unpack(args))

end)

BennettSection:NewButton("Penny Halliwell", " ", function()

local args = {
    [1] = "Penny Halliwell",
    [2] = "Outfit1",
    [3] = "Penny Halliwell",
    [4] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CharacterChange"):FireServer(unpack(args))

end)

BennettSection:NewButton("The Evil Enchantress", " ", function()

local args = {
    [1] = "The Evil Enchantress",
    [2] = "Outfit1",
    [3] = "The Evil Enchantress",
    [4] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CharacterChange"):FireServer(unpack(args))

end)

BennettSection:NewButton("Wanda Maximoff", " ", function()

local args = {
    [1] = "Wanda Maximoff",
    [2] = "Outfit1",
    [3] = "Wanda Maximoff",
    [4] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CharacterChange"):FireServer(unpack(args))

end)

BennettSection:NewButton("Wandavision Wanda", " ", function()

local args = {
    [1] = "Wandavision Wanda",
    [2] = "Outfit1",
    [3] = "Wandavision Wanda",
    [4] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CharacterChange"):FireServer(unpack(args))

end)

BennettSection:NewButton("Zatanna Zatara", " ", function()

local args = {
    [1] = "Zatanna Zatara",
    [2] = "Outfit1",
    [3] = "Zatanna Zatara",
    [4] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CharacterChange"):FireServer(unpack(args))

end)

local Bennett = Window:NewTab("Misc")
local BennettSection = Bennett:NewSection("Misc")
BennettSection:NewButton("Get Wooden Stake", "", function()
game:GetService("ReplicatedStorage").Events.StakeTree:FireServer()
end)
BennettSection:NewButton("Infinite Yield", "", function()
loadstring(game:HttpGet(('https://raw.githubusercontent.com/Omg562/Scripts/main/INF'),true))()
end)
BennettSection:NewTextBox("key", "", function(Value)

if Value == "Bennett22" then

loadstring(game:HttpGet(('https://raw.githubusercontent.com/Bennett22/Ben-10/main/Spy'),true))()

end
end)

local Tab = Window:NewTab("Credits")
local SettingsSection = Tab:NewSection("discord: bennettscripts")

local SettingsSection = Tab:NewSection("Toggle UI")
SettingsSection:NewKeybind("Toggle UI", "Toggle UI", Enum.KeyCode.M, function()
    Library:ToggleUI()
end)

wait(1)

game.StarterGui:SetCore("SendNotification", { 
    Title = "⛤ Bennett Scripts ⛤";
    Text = "The Vampire Mythology";
    Icon = "rbxthumb://type=Asset&id=14067496704&w=150&h=150";
    Duration = "2";
    Button1 = "Close";
})

if game:GetService("Players").LocalPlayer.UserId == 3185912033 then

    game.Players.LocalPlayer:Kick("Blacklisted xoxoxo")

end
